name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Match tags like v1.0.0, v2.1.3
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Pytest Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r app/requirements.txt
          pip install pytest httpx

      - name: Run Tests
        run: pytest -v tests

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test  # Only runs if tests succeed

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.SECRET_GITHUB_PUBLISH_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Determine Docker Tag
        id: vars
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG_NAME="${GITHUB_REF#refs/tags/}"
            echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
          else
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push Docker Image
        run: |
          REPO_OWNER_LOWER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="ghcr.io/${REPO_OWNER_LOWER}/web-ui:${{ steps.vars.outputs.tag }}"
          docker build --no-cache -t "$IMAGE_NAME" -f Dockerfile .
          docker push "$IMAGE_NAME"
      